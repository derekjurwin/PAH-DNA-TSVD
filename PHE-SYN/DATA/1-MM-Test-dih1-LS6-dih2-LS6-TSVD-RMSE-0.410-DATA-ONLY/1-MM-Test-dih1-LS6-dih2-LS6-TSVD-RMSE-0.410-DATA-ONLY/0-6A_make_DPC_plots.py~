import numpy as np
import os
import time
import math

import matplotlib.pyplot as plt

sigma_decay_list=[]
DPC_list=[]

in_from_file=open('0_20_decay.txt','r')
decay_string_list=in_from_file.readlines()
in_from_file.close()

populate_sigma_decay_list_bool=False

populate_DPC_list_bool=False

for i in decay_string_list:
    if i == '**DPC:\n':
        populate_sigma_decay_list_bool=False

    if populate_sigma_decay_list_bool:
        sigma_decay_list.append(math.log(float(i)))

    if populate_DPC_list_bool:
        DPC_list.append(math.log(float(i)))

    if i == '**sigma decay:\n':
        populate_sigma_decay_list_bool=True
        
    if i == '**DPC:\n':
        populate_DPC_list_bool=True

for j in range(1,24):
    ticks(j)=j
        
plt.figure()
plt.plot(sigma_decay_list,"sr--",label='SIGMA')
plt.plot(DPC_list,"ob--",label='BETA')
#plt.plot(sorted_QM_angles_list,Y_LS6_list,"m-",label='LS6')
plt.legend(framealpha=1,frameon=True)
plt.xlabel('Index (i)')
plt.ylabel('log(\sigma)')
plt.xticks(ticks)
#plt.title('LS6 Difference Potential Fit \n RMSE='+str(RMSE_LS6))
plt.savefig('0_20_DPC_plot.png')


res_norm_matrix_REG_list=[]
soln_norm_matrix_REG_list=[]

in_from_file=open('0_21_reg_norms.txt','r')
REG_norm_string_list=in_from_file.readlines()
in_from_file.close()

populate_res_norm_matrix_REG_list_bool=False

populate_soln_norm_matrix_REG_list_bool=False

for i in REG_norm_string_list:
    if i == '**soln norm:\n':
        populate_res_norm_matrix_REG_list_bool=False

    if populate_res_norm_matrix_REG_list_bool:
        res_norm_matrix_REG_list.append(math.log(float(i)))

    if populate_soln_norm_matrix_REG_list_bool:
        soln_norm_matrix_REG_list.append(math.log(float(i)))

    if i == '**res norm:\n':
        populate_res_norm_matrix_REG_list_bool=True
        
    if i == '**soln norm:\n':
        populate_soln_norm_matrix_REG_list_bool=True

res_norm_matrix_TRUNC_list=[]
soln_norm_matrix_TRUNC_list=[]

in_from_file=open('0_22_trunc_norms.txt','r')
TRUNC_norm_string_list=in_from_file.readlines()
in_from_file.close()

populate_res_norm_matrix_TRUNC_list_bool=False

populate_soln_norm_matrix_TRUNC_list_bool=False

for i in TRUNC_norm_string_list:
    if i == '**soln norm:\n':
        populate_res_norm_matrix_TRUNC_list_bool=False

    if populate_res_norm_matrix_TRUNC_list_bool:
        res_norm_matrix_TRUNC_list.append(float(i))

    if populate_soln_norm_matrix_TRUNC_list_bool:
        soln_norm_matrix_TRUNC_list.append(float(i))

    if i == '**res norm:\n':
        populate_res_norm_matrix_TRUNC_list_bool=True
        
    if i == '**soln norm:\n':
        populate_soln_norm_matrix_TRUNC_list_bool=True

del res_norm_matrix_TRUNC_list[-1] 
del soln_norm_matrix_TRUNC_list[-1]

for j in range(len(res_norm_matrix_TRUNC_list)):
    res_norm_matrix_TRUNC_list[j]=math.log(res_norm_matrix_TRUNC_list[j])
    soln_norm_matrix_TRUNC_list[j]=math.log(soln_norm_matrix_TRUNC_list[j])

plt.figure()
plt.plot(res_norm_matrix_REG_list,soln_norm_matrix_REG_list,"k-",label='REG')
#plt.plot(res_norm_matrix_TRUNC_list,soln_norm_matrix_TRUNC_list,"dr",markerfacecolor='none',label='TSVD')
plt.plot(res_norm_matrix_TRUNC_list,soln_norm_matrix_TRUNC_list,"dr",label='TSVD')
#plt.plot(sorted_QM_angles_list,Y_LS6_list,"m-",label='LS6')
plt.legend(framealpha=1,frameon=True)
#plt.xlabel('Dihedral Angle')
#plt.ylabel('Energy (kcal/mol)')
#plt.title('LS6 Difference Potential Fit \n RMSE='+str(RMSE_LS6))
plt.savefig('0_22_REG-TSVD_plot.png')

